Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).

Solution 
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<>();
        if (root == null) return result;

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        boolean isLeftToRight = true;
        
        while (!queue.isEmpty()) {
            int levelSize = queue.size();
            LinkedList<Integer> levelRes = new LinkedList<>(); 
            for (int i = 0; i < levelSize; i++) {
                TreeNode node = queue.poll();
                
                if (isLeftToRight) {
                    levelRes.addLast(node.val);
                } else {
                    levelRes.addFirst(node.val);
                }
                
                if (node.left != null) queue.offer(node.left);
                if (node.right != null) queue.offer(node.right);
            }
            
            result.add(levelRes);
            isLeftToRight = !isLeftToRight; 
        }
        
        return result;
    }
}
