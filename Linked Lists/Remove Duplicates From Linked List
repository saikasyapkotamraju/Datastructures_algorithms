Given a singly linked list. The task is to remove duplicates (nodes with duplicate values) from the given list (if it exists).
Note: Try not to use extra space. The nodes are arranged in a sorted way.

Solution :

class Solution {
    // Function to remove duplicates from sorted linked list.
    Node removeDuplicates(Node head) {
        // Your code here
        if(head==null || head.next==null)
        {
            return head;
        }
        Node temp1 = head, temp2 = head;
        while(temp2!=null)
        {
            if(temp1.data == temp2.data)
            {
                temp2 = temp2.next;
            }
            else
            {
                temp1.next = temp2;
                temp1 = temp1.next;
            }
        }
        if(temp1!=null && temp1.next!=null)
        {
            if(temp1.data==temp1.next.data)temp1.next = null;
        }
        
        return head;
    }
}
                                                                                                          
