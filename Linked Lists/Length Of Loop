Given the head of a linked list, determine whether the list contains a loop. If a loop is present, return the number of nodes in the loop, otherwise return 0.

Solution :
class Solution {
    // Function to find the length of a loop in the linked list.
    public int countNodesinLoop(Node head) {
        if(head==null || head.next==null)return 0;
        Node slow = head, fast = head;
        while(fast!=null && fast.next!=null)
        {
            slow = slow.next;
            fast = fast.next.next;
            if(slow==fast)
            {
                int len = 1;
                fast = fast.next;
                while(fast!=slow)
                {
                    fast = fast.next;
                    len++;
                }
                return len;
            }
        }
        return 0;
        
    }
}
