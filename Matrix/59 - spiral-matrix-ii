Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.

 

Example 1:


Input: n = 3
Output: [[1,2,3],[8,9,4],[7,6,5]]
Example 2:

Input: n = 1
Output: [[1]]
 

Constraints:

1 <= n <= 20

My solution : 
class Solution {
    public int[][] generateMatrix(int n) {
        int left = 0, right = n-1, top = 0, bottom = n-1;
        int dir = 0;
        List<Integer> res = new ArrayList<>();
        int[][] matrix = new int[n][n];
        int ele = 1;
        while(left<=right && top<=bottom)
        {
            if(dir==0)
            {
                for(int i=left; i<=right; i++)
                {
                    matrix[top][i] = ele;
                    ele++;
                }
                top++;
            }
            if(dir==1)
            {
                for(int i=top; i<=bottom; i++)
                {
                    matrix[i][right] = ele;
                    ele++;
                }
                right--;
            }
            if(dir==2)
            {
                for(int i=right; i>=left; i--)
                {
                    matrix[bottom][i] = ele;
                    ele++;
                }
                bottom--;
            }
            if(dir==3)
            {
                for(int i=bottom; i>=top; i--)
                {
                    matrix[i][left] = ele;
                    ele++;
                }
                left++;
            }
            dir = (dir+1)%4;
        }
        return matrix;
    }
}
