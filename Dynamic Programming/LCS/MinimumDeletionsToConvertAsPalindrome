Given a string s. In one step you can insert any character at any index of the string.

Return the minimum number of steps to make s palindrome.

A Palindrome String is one that reads the same backward as well as forward.

class Solution {
    public int minInsertions(String s) {
        StringBuilder sb = new StringBuilder();
        for(char c : s.toCharArray())
        {
            sb.append(c);
        }
        String revStr = sb.reverse().toString();
        int lps = lcs(s, revStr);
        return s.length() - lps;
    }

    public int lcs(String s1, String s2)
    {
        int n = s1.length(), m = s2.length();
        int[][] dp = new int[n+1][m+1];
        for(int i=1; i<=n; i++)
        {
            for(int j=1; j<=m; j++)
            {
                if(s1.charAt(i-1)==s2.charAt(j-1))
                {
                    dp[i][j] = 1 + dp[i-1][j-1];
                }
                else
                {
                    dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }

        return dp[n][m];
    }
}
