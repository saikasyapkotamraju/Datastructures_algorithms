Design a data-structure SpecialStack that supports all the stack operations like push(), pop(), isEmpty(), isFull() and 
an additional operation getMin() which should return the minimum element from the SpecialStack. Your task is to complete all the functions, using a stack data structure.

Note: The output of the code will be the value returned by getMin() function.

Solution :

class GfG{
	public void push(int a,Stack<Integer> s)
	{
	    s.push(a);
	}
	public int pop(Stack<Integer> s)
        {
            return s.pop();
	}
	public int min(Stack<Integer> s)
        {
           int min = Integer.MAX_VALUE;
           while(!s.isEmpty())
           {
               min = Math.min(min, s.pop());
           }
           return min;
	}
	public boolean isFull(Stack<Integer>s, int n)
        {
           return s.size()==n;
	}
	public boolean isEmpty(Stack<Integer>s)
        {
           return s.size()==0;
	}
}
