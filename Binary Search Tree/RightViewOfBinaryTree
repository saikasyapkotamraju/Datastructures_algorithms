Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Solution :
class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if(root==null)
        {
            return result;
        }

        if(root.left==null && root.right==null)
        {
            result.add(root.val);
            return result;
        }

        dfs(root, result, 0);
        return result;
    }

    public void dfs(TreeNode root, List<Integer> result, int depth)
    {
        if(root==null)return;
        if(root!=null && depth==result.size())
        {
            result.add(root.val);
        }
        dfs(root.right, result, depth+1);
        dfs(root.left, result, depth+1);
    }
}
